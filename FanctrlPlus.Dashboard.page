Menu="Dashboard:0"
Cond="version_compare(parse_ini_file('/etc/unraid-version')['version'],'6.11.9','>')"
---
<?php
$pluginname = "fanctrlplus";
$cfg_path = "/boot/config/plugins/$pluginname";
$cfg_files = glob("$cfg_path/{$pluginname}_*.cfg");

$order_file = "$cfg_path/order.cfg";
$order = [];
$all_cfg = [];

// 获取状态
$status_text = file_exists("/var/run/{$pluginname}.pid") ? "Running" : "Inactive";
$status_color = $status_text === "Running" ? "green-text" : "red-text";

// 先读取 order.cfg 顺序
if (file_exists($order_file)) {
  $ini = parse_ini_file($order_file);
  $order = array_values($ini);
}

// 1. 先按 order.cfg 顺序添加（只要实际存在）
foreach ($order as $file) {
  $path = "$cfg_path/$file";
  if (is_file($path)) {
    $cfg = parse_ini_file($path);
    $cfg['file'] = $file;
    $all_cfg[] = $cfg;
  }
}

// 2. 把未出现在 order.cfg 的 cfg 文件（包含 _temp_）加进去
$seen = array_flip($order);
foreach ($cfg_files as $path) {
  $basename = basename($path);
  if (!isset($seen[$basename])) {
    $cfg = parse_ini_file($path);
    $cfg['file'] = $basename;
    $all_cfg[] = $cfg;
  }
}

// 3. 构建 HTML row
$fan_rows = "";
foreach ($all_cfg as $cfg) {
  $file = $cfg['file'];
  $label = $cfg['custom'] ?? $file;

  // 跳过未命名的风扇（custom 名为空）
  if (empty($cfg['custom'])) continue;

  $fan_rows .= <<<ROW
  <tr>
    <td>
      <span class="w26">$label</span>
      <span class="w18 fcp-col-temp" data-label="$label">
        <span class="fp-tval">--</span>
        <span class="fp-origin"></span>
      </span>
      <span class="w18 fanctrlplus-rpm" data-label="$label">--</span>
      <span class="w18 fanctrlplus-fanstatus" data-label="$label">--</span>
      <span class="w18">
        <span class="fa fa-refresh fanctrlplus-refresh"
          data-label="$label"
          style="cursor:pointer;font-size:13px;color:var(--blue-800);vertical-align:middle;"
          title="Manual Run: Read current temperature and set fan speed immediately"></span>
      </span>
    </td>
  </tr>
  ROW;
}

// 样式输出
echo '<link rel="stylesheet" href="/plugins/fanctrlplus/fonts/style.css">' . PHP_EOL;
echo <<<STYLE
<style>
/* ====== 顶部状态（保留原样） ====== */
.fanctrlplus-status{
  font-weight: normal;
  font-size: 12px;
  display: inline-block;
  margin-bottom: 6px;
}

/* ====== 表头：桌面全称，≤1080px 用短写 ====== */
#fanctrlplus-dashboard .fcp-col-head .mobile{ display:none; }
@media (max-width:1080px){
  #fanctrlplus-dashboard .fcp-col-head .full  { display:none; }
  #fanctrlplus-dashboard .fcp-col-head .mobile{ display:inline; }
}

/* ====== 温度列（新结构）====== */
/* 外层容器：桌面一行排列 */
#fanctrlplus-dashboard .fcp-col-temp{
  display:inline-flex; gap:6px; align-items:baseline;
}

/* 数值部分 */
#fanctrlplus-dashboard .fcp-col-temp .fp-tval{
  display:inline-block;
  min-width:16px;
  text-align:right;
}

/* 单位（兼容旧 */
#fanctrlplus-dashboard .fcp-col-temp{
  display:inline-block;
  opacity:0.9;
}

/* 来源 */
#fanctrlplus-dashboard .fcp-col-temp .fp-origin{
  display:inline-block;
  min-width:55px;
  text-align:center;
  font-size:90%;
  opacity:.65;
}

/* 无来源时的占位（与来源宽度匹配，避免跳动） */
#fanctrlplus-dashboard .fcp-col-temp .fp-origin-placeholder{
  display:inline-block;
  min-width:85px;
  text-align:center;
  color:inherit;
  opacity:.65;
}

/* ====== ≤1080px：两行布局，避免 w18 溢出 ====== */
@media (max-width:1080px){
  #fanctrlplus-dashboard .fcp-col-temp{
    display:block; line-height:1.1;
  }
  #fanctrlplus-dashboard .fcp-col-temp .fp-tval{
    display:inline-block;         /* 上行：温度 */
  }
  #fanctrlplus-dashboard .fcp-col-temp .fp-origin{
    display:block;             /* 下行：来源 */
    font-size:80%;
    opacity:.65;
    margin-top:2px;
    min-width:0;
    text-align:left;
  }
  #fanctrlplus-dashboard .fcp-col-temp .fp-origin-placeholder{
    display:block;
    min-width:0;
    margin-top:2px;
    margin-left:10px;
    text-align:left;
    opacity:.65;
  }
}
</style>
STYLE;

// 输出 tile
$mytiles[$pluginname]['column2'] = <<<EOT
<tbody id="fanctrlplus-dashboard" title="FanCtrl Plus">
  <tr>
    <td>
      <span class="tile-header">
        <span class="tile-header-left">
          <i class="icon-fanctrlplus f32"></i>
          <div class="section">
            FanCtrl Plus<br>
            <span class="fanctrlplus-status $status_color">Status: $status_text</span>
          </div>
        </span>
        <span class="tile-header-right">
          <span class="tile-header-right-controls">
            <a href="/Settings/fanctrlplus" title="Go to FanCtrl Plus settings">
              <i class="fa fa-fw fa-cog control"></i>
            </a>
        </span>
      </span>
    </td>
  </tr>

  <tr class="header">
    <td>
      <span class="w26">NAME</span>
      <span class="w18 fcp-col-head">
        <span class="full">TEMP (SOURCE)</span>
        <span class="mobile">TEMP</span>
      </span>
      <span class="w18">RPM</span>
      <span class="w18">STATUS</span>
      <span class="w18">RUN</span>
    </td>
  </tr>

  $fan_rows
</tbody>
EOT;
?>
<script>
function refreshSingleFan(custom) {
  fetch(`/plugins/fanctrlplus/include/FanctrlLogic.php?op=refresh_single&custom=${encodeURIComponent(custom)}`)
    .then(() => setTimeout(updateFanctrlplusTile, 2000)); // 2秒后刷新界面
}

// 设置温度与来源。支持 *, --，以及无来源时用占位“-”
function setTempCell(label, val, origin) {
  const tile = document.getElementById('fanctrlplus-dashboard');
  if (!tile) return;

  // 保险：label 里若有特殊字符，避免 querySelector 失效
  const key = (window.CSS && CSS.escape) ? CSS.escape(label) : String(label).replace(/"/g, '\\"');

  const wrap = tile.querySelector(`.fcp-col-temp[data-label="${key}"]`);
  if (!wrap) return;

  const t = wrap.querySelector('.fp-tval');
  const o = wrap.querySelector('.fp-origin');

  // 温度文本
  let show;
  if (val === '*') show = '*';
  else if (val == null || val === '-' || val === '--') show = '--';
  else show = `${val} °C`;
  if (t) t.textContent = show;

  // 来源：有就 (CPU)/(Disk)，没有就插入占位 span，确保列宽不跳
  if (o) {
    if (origin && String(origin).trim()) {
      o.textContent = `(${origin})`;
    } else {
      o.innerHTML = `<span class="fp-origin-placeholder">-</span>`;
    }
  }
}

function updateFanctrlplusTile() {
  const tile = document.getElementById("fanctrlplus-dashboard");
  if (!tile) return;

  fetch("/plugins/fanctrlplus/FanctrlDashboard.php")
    .then(res => res.json())
    .then(data => {
      // 顶部状态
      const statusSpan = tile.querySelector(".fanctrlplus-status");
      if (statusSpan) {
        statusSpan.textContent = `Status: ${data.status}`;
        statusSpan.className = "fanctrlplus-status " + (data.status === "Running" ? "green-text" : "red-text");
      }

      // 行数据（仅新结构）
      (data.fans || []).forEach(f => {
        setTempCell(f.label, f.temp_raw, f.temp_origin);

        const rpmEl  = tile.querySelector(`.fanctrlplus-rpm[data-label="${f.label}"]`);
        const statEl = tile.querySelector(`.fanctrlplus-fanstatus[data-label="${f.label}"]`);
        if (rpmEl)  rpmEl.textContent = (f.rpm ?? "-");
        if (statEl) statEl.innerHTML  = (f.status ?? "-");
      });
    })
    .catch(() => {
      const statusSpan = tile?.querySelector(".fanctrlplus-status");
      if (statusSpan) statusSpan.textContent = "Status: Loading...";

      // 仅复位新结构
      tile?.querySelectorAll('.fcp-col-temp .fp-tval').forEach(n => n.textContent = '--');
      tile?.querySelectorAll('.fcp-col-temp .fp-origin').forEach(n => n.textContent = '');
      tile?.querySelectorAll('.fanctrlplus-rpm, .fanctrlplus-fanstatus').forEach(n => n.textContent = '--');
    });
}

document.addEventListener("DOMContentLoaded", function () {
  setTimeout(updateFanctrlplusTile, 200);
  setInterval(updateFanctrlplusTile, 5000);

  const dashboard = document.getElementById("fanctrlplus-dashboard");
  if (dashboard) {
    dashboard.addEventListener("click", function(e) {
      const btn = e.target.closest('.fanctrlplus-refresh');
      if (!btn) return;

      const label = btn.getAttribute('data-label');
      btn.style.color = '#aaa';
      btn.classList.add('fa-spin');

      refreshSingleFan(label);

      setTimeout(() => {
        btn.style.color = 'var(--blue-800)';
        btn.classList.remove('fa-spin');
      }, 1800);

      e.preventDefault();
      e.stopPropagation();
    });
  }
});
</script>
